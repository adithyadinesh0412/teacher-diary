version: '3'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.3.0'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - elevate_net
    logging:
      driver: json-file
  kafka:
    image: 'confluentinc/cp-kafka:7.3.0'
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    logging:
      driver: json-file
  postgres:
    image: 'postgres:16'
    restart: 'always'
    ports:
      - '5432:5432'
    networks:
      - elevate_net
    logging:
      driver: none
  redis:
    image: 'redis:7.0.0'
    restart: 'always'
    expose:
      - '6379'
    networks:
      - elevate_net
    logging:
      driver: json-file
  user_elevate_2.5:
    build: '../'
    # image: elevate/user:1.0
    volumes:
      - ../src/:/var/src
    ports:
      - '5001:5001'
    command: [ 'nodemon', 'app.js' ]
    environment:
      - DATABASE_URL=postgres://postgres:postgres@localhost:5432/elevate-user
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis://redis:6379
    env_file:
      - integration_test.env
    depends_on:
      - kafka
      - postgres
      - redis
    networks:
      - elevate_net
networks:
  elevate_net:
    external: false
