---
- hosts: elevate
  vars:
    #contents: "{{ lookup('file', '/opt/rsync/text.txt') }}"
    project_path: /opt/backend/deployment
  tasks:
    - name: Slurp hosts file
      slurp:
        src: "{{ project_path }}/.token"
      register: slurpfile
    #- debug: msg="{{ slurpfile['content'] | b64decode }}"
    #- debug: msg="the value of foo.txt is {{ contents }}"
    - name: Get vault credentials
      shell: "curl --location --request GET '{{ vaultAddress }}{{ vaultName }}' --header 'X-Vault-Token: {{ slurpfile['content'] | b64decode }}' | jq '.data' > '{{ project_path 
}}/data2.json'"
      register: credentials
    - debug: msg="{{ credentials }}"

    - name: Get gcp credentials
      shell: "curl --location --request GET '{{ vaultAddress }}gcp' --header 'X-Vault-Token: {{ slurpfile['content'] | b64decode }}' | jq '.data.data' > '{{ project_path 
}}/gcp.json'"

    - name: Set some variable
      set_fact:
        release_path: "{{ project_path }}/releases/{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"
        current_path: "{{ project_path }}/{{ directoryName }}"
    - name: Retrieve current release folder
      command: readlink -f {{ directoryName }}
      register: current_release_path
      ignore_errors: yes
      args:
        chdir: "{{ project_path }}"
    - name: Create new folder
      file:
        dest={{ release_path }}
        mode=0755
        recurse=yes
        state=directory
    - name: Clone the repository
      git:
        repo: https://github.com/ELEVATE-Project/user.git
        dest: "{{ release_path }}"
        clone: yes
        update: yes
        version: "{{ gitBranch }}"
    - name: Update npm
      shell: cd {{release_path}}/src && npm i && npm i redoc-cli 
    
    - name: Delete Old Folder 
      shell: rm -rf {{ current_path }} &&  cd {{ project_path }} && mkdir {{ directoryName }}
    
    - name: Move code
      shell: mv "{{ release_path }}"/* {{ current_path }}/
   # - name: Update symlink
    #  file:
     #   src={{ release_path }}
      #  dest={{ current_path }}
       # state=link
    
    - name: set permission
      shell: chmod 744 {{ current_path }}/src/scripts/json2env.sh  
      
    - name: generate .env 
      shell: cat {{ project_path }}/data2.json | {{ current_path }}/src/scripts/json2env.sh > {{ current_path }}/src/.env
      register: envConfig 
    - debug: msg=" cred {{ envConfig }} "
    
    - name: move gcp credentials 
      shell: mv {{ project_path }}/gcp.json  {{ current_path }}/src/

    - name: generate api-doc 
      shell: cd {{current_path}}/src && redoc-cli build -o ./api-doc/index.html ./api-doc/api-doc.yaml
      register: apiDocResponse 
    - debug: msg=" Api-doc {{ apiDocResponse }} "


    - name: Run Migrations
      command: "chdir={{current_path}}/src npx sequelize-cli db:migrate"

    - name: Delete old pm2 process
      command: pm2 delete {{ serviceName }}
      ignore_errors: yes

    - name: Delete release folder
      shell: rm -rf  {{ release_path }}

    - name: Start pm2
      command: "chdir={{current_path}}/src pm2 start app.js -i 2 --name {{ serviceName }}"
      register: pm2Info

    - name: debug info
      debug:
         msg: "Pm2 log {{pm2Info}}"